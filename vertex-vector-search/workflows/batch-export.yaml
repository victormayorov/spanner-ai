# Copyright 2023 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

main:
  params: [params]
  steps:
    - initialize_project:
        steps:
          - dataflow_project:
              switch:
                  - condition: ${not ("project_id" in params.dataflow)}
                    assign:
                      - params.dataflow.project_id: ${params.project_id}
          - spanner_project:
              switch:
                  - condition: ${not ("project_id" in params.spanner)}
                    assign:
                      - params.spanner.project_id: ${params.project_id}
    - initialize_location:
        steps:
          - dataflow_location:
              switch:
                  - condition: ${not ("location" in params.dataflow)}
                    assign:
                      - params.dataflow.location: ${params.location}
    - define_timestamp:
        assign:
          - current_timestamp: ${time.format(sys.now())}
    - log_timestamp:
        call: sys.log
        args:
          text: ${"Spanner Version Time chosen for exporting data is " + current_timestamp}
    - initialize_dataflow_job_variables:
        steps:
          - max_workers:
              switch:
                  - condition: ${not ("max_workers" in params.dataflow)}
                    assign:
                      - params.dataflow.max_workers: 0
          - num_workers:
              switch:
                  - condition: ${not ("num_workers" in params.dataflow)}
                    assign:
                      - params.dataflow.num_workers: 0
          - data_boost_enabled:
              switch:
                  - condition: ${not ("data_boost_enabled" in params.spanner)}
                    assign:
                      - params.spanner.data_boost_enabled: "false"
          - service_account_email:
              switch:
                  - condition: ${not ("service_account_email" in params.dataflow)}
                    assign:
                      - params.dataflow.service_account_email: ""
          - job_name_prefix:
              switch:
              - condition: ${not ("job_name_prefix" in params.dataflow)}
                assign:
                - params.dataflow.job_name_prefix: "spanner-vectors-export"
          - output_file_prefix:
              switch:
              - condition: ${not ("output_file_prefix" in params.gcs)}
                assign:
                - params.gcs.output_file_prefix: "vector-embeddings"
    - initialize_dataflow_job_name_and_gcs_folder:
        assign:
        - spanner_export_job_name: ${params.dataflow.job_name_prefix + "_" + current_timestamp}
        - embeddings_output_folder: ${params.gcs.output_folder + "embeddings-" + current_timestamp + "/"}
        - dataflow_template_path: ${"gs://dataflow-templates-us-central1/latest/Cloud_Spanner_vectors_to_Cloud_Storage"}
    - log_gcs_folder_path:
        call: sys.log
        args:
          text: ${"Exporting Vector Embeddings to gcs folder - " + embeddings_output_folder}
    - dataflow_spanner_export_job:
        call: googleapis.dataflow.v1b3.projects.locations.templates.create
        args:
          projectId: ${params.dataflow.project_id}
          location: ${params.dataflow.location}
          body:
            jobName: ${spanner_export_job_name}
            parameters:
              spannerProjectId: ${params.spanner.project_id}
              spannerInstanceId: ${params.spanner.instance_id}
              spannerDatabaseId: ${params.spanner.database_id}
              spannerTable: ${params.spanner.table_name}
              spannerVersionTime: ${current_timestamp}
              spannerColumnsToExport: ${params.spanner.columns_to_export}
              spannerDataBoostEnabled: ${params.spanner.data_boost_enabled}
              gcsOutputFolder: ${embeddings_output_folder}
              gcsOutputFilePrefix: ${params.gcs.output_file_prefix}
            environment:
              tempLocation: ${params.dataflow.temp_location}
              numWorkers: ${params.dataflow.num_workers}
              maxWorkers: ${params.dataflow.max_workers}
              serviceAccountEmail: ${params.dataflow.service_account_email}
            gcsPath: ${dataflow_template_path}
          connector_params:
              timeout: 43200
        result: dataflow_spanner_export_job_result
    - set_dataflow_spanner_export_job_id:
        assign:
          - dataflow_export_job_id: ${dataflow_spanner_export_job_result.id}
    - log_dataflow_job:
        call: sys.log
        args:
          text: ${"Export of data to gcs complete. You can view the job details at " + "https://console.cloud.google.com/dataflow/jobs/" + params.dataflow.location + "/" + dataflow_export_job_id}
